{"ast":null,"code":"var _jsxFileName = \"/Users/andeslee/Documents/Cursor Projects/Building Interactive Website for Stripes Venture Capital/src/components/common/BarChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { colors } from './ChartContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  data,\n  maxValue,\n  barHeight = 24,\n  showValues = true,\n  className = '',\n  barColor = colors.blue.primary\n}) => {\n  _s();\n  const [hoverIndex, setHoverIndex] = useState(null);\n  const calculatedMax = maxValue || Math.max(...data.map(item => item.value)) * 1.1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `bar-chart ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%'\n      },\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '8px',\n          borderRadius: '8px',\n          backgroundColor: hoverIndex === index ? 'rgba(58, 58, 60, 0.5)' : 'transparent',\n          marginBottom: index < data.length - 1 ? '16px' : '0',\n          transition: 'background-color 0.15s ease'\n        },\n        onMouseEnter: () => setHoverIndex(index),\n        onMouseLeave: () => setHoverIndex(null),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '180px',\n            fontSize: '14px',\n            fontWeight: 500,\n            paddingRight: '16px',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          },\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `${barHeight}px`,\n              width: `${item.value / calculatedMax * 100}%`,\n              background: `linear-gradient(90deg, ${barColor} 0%, ${colors.blue.lighter1} 100%)`,\n              borderRadius: '6px',\n              boxShadow: '0 2px 6px rgba(10, 132, 255, 0.2)',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              paddingRight: '12px',\n              fontSize: '13px',\n              fontWeight: 500,\n              color: 'white',\n              transition: 'all 0.2s ease',\n              transform: hoverIndex === index ? 'scale(1.01)' : 'scale(1)'\n            },\n            children: showValues && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.prefix || '', item.value, item.suffix || '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"7XGtNr9BsKihW2yVz9tMMtR5Dek=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","colors","jsxDEV","_jsxDEV","BarChart","data","maxValue","barHeight","showValues","className","barColor","blue","primary","_s","hoverIndex","setHoverIndex","calculatedMax","Math","max","map","item","value","children","style","display","flexDirection","width","index","alignItems","padding","borderRadius","backgroundColor","marginBottom","length","transition","onMouseEnter","onMouseLeave","fontSize","fontWeight","paddingRight","whiteSpace","overflow","textOverflow","label","fileName","_jsxFileName","lineNumber","columnNumber","flex","height","background","lighter1","boxShadow","justifyContent","color","transform","prefix","suffix","_c","$RefreshReg$"],"sources":["/Users/andeslee/Documents/Cursor Projects/Building Interactive Website for Stripes Venture Capital/src/components/common/BarChart.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { colors } from './ChartContainer';\n\ninterface BarChartItem {\n  label: string;\n  value: number;\n  suffix?: string;\n  prefix?: string;\n}\n\ninterface BarChartProps {\n  data: BarChartItem[];\n  maxValue?: number;\n  barHeight?: number;\n  showValues?: boolean;\n  className?: string;\n  barColor?: string;\n}\n\nconst BarChart: React.FC<BarChartProps> = ({ \n  data, \n  maxValue, \n  barHeight = 24,\n  showValues = true,\n  className = '',\n  barColor = colors.blue.primary\n}) => {\n  const [hoverIndex, setHoverIndex] = useState<number | null>(null);\n  const calculatedMax = maxValue || Math.max(...data.map(item => item.value)) * 1.1;\n  \n  return (\n    <div className={`bar-chart ${className}`}>\n      <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n        {data.map((item, index) => (\n          <div\n            key={index}\n            style={{ \n              display: 'flex', \n              alignItems: 'center',\n              padding: '8px',\n              borderRadius: '8px',\n              backgroundColor: hoverIndex === index ? 'rgba(58, 58, 60, 0.5)' : 'transparent',\n              marginBottom: index < data.length - 1 ? '16px' : '0',\n              transition: 'background-color 0.15s ease'\n            }}\n            onMouseEnter={() => setHoverIndex(index)}\n            onMouseLeave={() => setHoverIndex(null)}\n          >\n            <div style={{ \n              width: '180px', \n              fontSize: '14px',\n              fontWeight: 500,\n              paddingRight: '16px',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis'\n            }}>\n              {item.label}\n            </div>\n            <div style={{ flex: 1 }}>\n              <div style={{ \n                height: `${barHeight}px`,\n                width: `${(item.value / calculatedMax) * 100}%`,\n                background: `linear-gradient(90deg, ${barColor} 0%, ${colors.blue.lighter1} 100%)`,\n                borderRadius: '6px',\n                boxShadow: '0 2px 6px rgba(10, 132, 255, 0.2)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n                paddingRight: '12px',\n                fontSize: '13px',\n                fontWeight: 500,\n                color: 'white',\n                transition: 'all 0.2s ease',\n                transform: hoverIndex === index ? 'scale(1.01)' : 'scale(1)'\n              }}>\n                {showValues && (\n                  <span>\n                    {item.prefix || ''}{item.value}{item.suffix || ''}\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BarChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}