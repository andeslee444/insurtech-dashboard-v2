{"ast":null,"code":"var _jsxFileName = \"/Users/andeslee/Documents/Cursor Projects/Building Interactive Website for Stripes Venture Capital/src/sections/MarketDynamicsSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { marketShareData, growthRateData } from '../data/mockData';\nimport ChartContainer from '../components/common/ChartContainer';\nimport DataTable from '../components/common/DataTable';\nimport BarChart from '../components/common/BarChart';\nimport AreaChart from '../components/common/AreaChart';\nimport { colors } from '../components/common/ChartContainer';\n\n// Time periods for filtering\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst periods = [{\n  id: 'all',\n  label: 'All Time'\n}, {\n  id: 'last4',\n  label: 'Last 4 Quarters'\n}, {\n  id: 'y2018',\n  label: '2018'\n}, {\n  id: 'y2019',\n  label: '2019'\n}];\nconst MarketDynamicsSection = () => {\n  _s();\n  const [showAsTable, setShowAsTable] = useState(false);\n  const [selectedPeriod, setSelectedPeriod] = useState('all');\n  const [chartKey, setChartKey] = useState(0); // To force re-render for animation\n\n  // Filter market share data based on selected period\n  const filteredMarketData = marketShareData.filter(item => {\n    if (selectedPeriod === 'all') return true;\n    if (selectedPeriod === 'last4') return marketShareData.indexOf(item) >= marketShareData.length - 4;\n    if (selectedPeriod === 'y2018') return item.time.includes('2018');\n    if (selectedPeriod === 'y2019') return item.time.includes('2019');\n    return true;\n  });\n\n  // Format market share data for the area chart\n  const marketShareChartData = filteredMarketData.map(item => ({\n    label: item.time,\n    value: item.marketShare,\n    secondaryValue: 100 - item.marketShare\n  }));\n\n  // Format market share data for the table (as fallback)\n  const marketShareTableData = filteredMarketData.map(item => ({\n    time: item.time,\n    traditional: (100 - item.marketShare).toFixed(1),\n    insurtech: item.marketShare.toFixed(1)\n  }));\n\n  // Define table columns\n  const marketShareColumns = [{\n    key: 'time',\n    header: 'Year',\n    align: 'left'\n  }, {\n    key: 'traditional',\n    header: 'Traditional (%)',\n    align: 'right',\n    format: value => `${value}%`\n  }, {\n    key: 'insurtech',\n    header: 'InsurTech (%)',\n    align: 'right',\n    format: value => `${value}%`,\n    cellStyle: {\n      color: colors.green,\n      fontWeight: 500\n    }\n  }];\n\n  // Format growth rate data for bar chart\n  const growthRateChartData = growthRateData.sort((a, b) => b.rate - a.rate).map(item => ({\n    label: item.category,\n    value: item.rate,\n    suffix: '%'\n  }));\n\n  // Handle period change\n  const handlePeriodChange = period => {\n    setSelectedPeriod(period);\n    setChartKey(prev => prev + 1); // Force re-render for animation\n  };\n\n  // Handle toggle between chart and table\n  const handleToggleView = showTable => {\n    setShowAsTable(showTable);\n    if (!showTable) {\n      // Set timeout to allow fade out before re-rendering chart\n      setTimeout(() => setChartKey(prev => prev + 1), 300);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"market-dynamics-section animate-in\",\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      children: [/*#__PURE__*/_jsxDEV(ChartContainer, {\n        title: \"Market Share Evolution\",\n        insight: \"InsurTech market share has grown from 32% to 62% over the past 5 years, indicating a significant shift in the industry.\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '16px',\n              zIndex: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pill-button-group\",\n              style: {\n                display: 'inline-flex',\n                background: 'rgba(44, 44, 46, 0.8)',\n                backdropFilter: 'blur(8px)',\n                borderRadius: '20px',\n                padding: '4px',\n                border: `1px solid ${colors.border}`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: !showAsTable ? 'pill-button selected' : 'pill-button',\n                style: {\n                  margin: 0,\n                  minWidth: '80px',\n                  padding: '6px 12px'\n                },\n                onClick: () => handleToggleView(false),\n                children: \"Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: showAsTable ? 'pill-button selected' : 'pill-button',\n                style: {\n                  margin: 0,\n                  minWidth: '80px',\n                  padding: '6px 12px'\n                },\n                onClick: () => handleToggleView(true),\n                children: \"Table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '8px'\n              },\n              children: periods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: selectedPeriod === period.id ? 'pill-button selected' : 'pill-button',\n                onClick: () => handlePeriodChange(period.id),\n                children: period.label\n              }, period.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '370px',\n              position: 'relative',\n              transition: 'opacity 0.3s ease-in-out',\n              opacity: 1\n            },\n            children: showAsTable ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-in\",\n              style: {\n                height: '100%',\n                overflow: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(DataTable, {\n                columns: marketShareColumns,\n                data: marketShareTableData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(AreaChart, {\n              data: marketShareChartData,\n              height: 350,\n              primaryColor: colors.green,\n              secondaryColor: colors.blue.primary,\n              areaOpacity: 0.2,\n              title1: \"InsurTech\",\n              title2: \"Traditional\"\n            }, chartKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n        title: \"Growth Rate by Category\",\n        insight: \"Cyber Insurance and Climate Risk categories show the highest growth rates, presenting significant investment opportunities.\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: growthRateChartData,\n          maxValue: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketDynamicsSection, \"SNpMXz3llf1mhwYoToI8Ddz6MFo=\");\n_c = MarketDynamicsSection;\nexport default MarketDynamicsSection;\nvar _c;\n$RefreshReg$(_c, \"MarketDynamicsSection\");","map":{"version":3,"names":["React","useState","marketShareData","growthRateData","ChartContainer","DataTable","BarChart","AreaChart","colors","jsxDEV","_jsxDEV","periods","id","label","MarketDynamicsSection","_s","showAsTable","setShowAsTable","selectedPeriod","setSelectedPeriod","chartKey","setChartKey","filteredMarketData","filter","item","indexOf","length","time","includes","marketShareChartData","map","value","marketShare","secondaryValue","marketShareTableData","traditional","toFixed","insurtech","marketShareColumns","key","header","align","format","cellStyle","color","green","fontWeight","growthRateChartData","sort","a","b","rate","category","suffix","handlePeriodChange","period","prev","handleToggleView","showTable","setTimeout","className","style","maxWidth","margin","children","title","insight","position","display","justifyContent","alignItems","marginBottom","zIndex","background","backdropFilter","borderRadius","padding","border","minWidth","onClick","fileName","_jsxFileName","lineNumber","columnNumber","gap","height","transition","opacity","overflow","columns","data","primaryColor","secondaryColor","blue","primary","areaOpacity","title1","title2","maxValue","_c","$RefreshReg$"],"sources":["/Users/andeslee/Documents/Cursor Projects/Building Interactive Website for Stripes Venture Capital/src/sections/MarketDynamicsSection.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { marketShareData, growthRateData } from '../data/mockData';\nimport ChartContainer from '../components/common/ChartContainer';\nimport DataTable from '../components/common/DataTable';\nimport BarChart from '../components/common/BarChart';\nimport AreaChart from '../components/common/AreaChart';\nimport { colors } from '../components/common/ChartContainer';\n\n// Time periods for filtering\nconst periods = [\n  { id: 'all', label: 'All Time' },\n  { id: 'last4', label: 'Last 4 Quarters' },\n  { id: 'y2018', label: '2018' },\n  { id: 'y2019', label: '2019' },\n];\n\nconst MarketDynamicsSection: React.FC = () => {\n  const [showAsTable, setShowAsTable] = useState(false);\n  const [selectedPeriod, setSelectedPeriod] = useState('all');\n  const [chartKey, setChartKey] = useState(0); // To force re-render for animation\n\n  // Filter market share data based on selected period\n  const filteredMarketData = marketShareData.filter(item => {\n    if (selectedPeriod === 'all') return true;\n    if (selectedPeriod === 'last4') return marketShareData.indexOf(item) >= marketShareData.length - 4;\n    if (selectedPeriod === 'y2018') return item.time.includes('2018');\n    if (selectedPeriod === 'y2019') return item.time.includes('2019');\n    return true;\n  });\n\n  // Format market share data for the area chart\n  const marketShareChartData = filteredMarketData.map(item => ({\n    label: item.time,\n    value: item.marketShare,\n    secondaryValue: 100 - item.marketShare\n  }));\n\n  // Format market share data for the table (as fallback)\n  const marketShareTableData = filteredMarketData.map(item => ({\n    time: item.time,\n    traditional: (100 - item.marketShare).toFixed(1),\n    insurtech: item.marketShare.toFixed(1)\n  }));\n\n  // Define table columns\n  const marketShareColumns = [\n    { key: 'time', header: 'Year', align: 'left' as const },\n    { \n      key: 'traditional', \n      header: 'Traditional (%)', \n      align: 'right' as const,\n      format: (value: string) => `${value}%`\n    },\n    { \n      key: 'insurtech', \n      header: 'InsurTech (%)', \n      align: 'right' as const,\n      format: (value: string) => `${value}%`,\n      cellStyle: { color: colors.green, fontWeight: 500 }\n    }\n  ];\n\n  // Format growth rate data for bar chart\n  const growthRateChartData = growthRateData\n    .sort((a, b) => b.rate - a.rate)\n    .map(item => ({\n      label: item.category,\n      value: item.rate,\n      suffix: '%'\n    }));\n\n  // Handle period change\n  const handlePeriodChange = (period: string) => {\n    setSelectedPeriod(period);\n    setChartKey(prev => prev + 1); // Force re-render for animation\n  };\n\n  // Handle toggle between chart and table\n  const handleToggleView = (showTable: boolean) => {\n    setShowAsTable(showTable);\n    if (!showTable) {\n      // Set timeout to allow fade out before re-rendering chart\n      setTimeout(() => setChartKey(prev => prev + 1), 300);\n    }\n  };\n\n  return (\n    <div className=\"market-dynamics-section animate-in\" style={{ maxWidth: '1200px', margin: '0 auto' }}>\n      <div className=\"section-content\">\n        <ChartContainer \n          title=\"Market Share Evolution\"\n          insight=\"InsurTech market share has grown from 32% to 62% over the past 5 years, indicating a significant shift in the industry.\"\n        >\n          <div style={{ position: 'relative' }}>\n            {/* Controls row */}\n            <div style={{ \n              position: 'relative',\n              display: 'flex', \n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '16px',\n              zIndex: 5\n            }}>\n              {/* View toggle */}\n              <div \n                className=\"pill-button-group\"\n                style={{ \n                  display: 'inline-flex',\n                  background: 'rgba(44, 44, 46, 0.8)',\n                  backdropFilter: 'blur(8px)',\n                  borderRadius: '20px',\n                  padding: '4px',\n                  border: `1px solid ${colors.border}`\n                }}\n              >\n                <button \n                  className={!showAsTable ? 'pill-button selected' : 'pill-button'} \n                  style={{ \n                    margin: 0, \n                    minWidth: '80px',\n                    padding: '6px 12px'\n                  }}\n                  onClick={() => handleToggleView(false)}\n                >\n                  Chart\n                </button>\n                <button \n                  className={showAsTable ? 'pill-button selected' : 'pill-button'} \n                  style={{ \n                    margin: 0, \n                    minWidth: '80px',\n                    padding: '6px 12px'\n                  }}\n                  onClick={() => handleToggleView(true)}\n                >\n                  Table\n                </button>\n              </div>\n\n              {/* Period selector */}\n              <div style={{ display: 'flex', gap: '8px' }}>\n                {periods.map(period => (\n                  <button\n                    key={period.id}\n                    className={selectedPeriod === period.id ? 'pill-button selected' : 'pill-button'}\n                    onClick={() => handlePeriodChange(period.id)}\n                  >\n                    {period.label}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Chart/Table container */}\n            <div style={{ \n              height: '370px', \n              position: 'relative',\n              transition: 'opacity 0.3s ease-in-out',\n              opacity: 1\n            }}>\n              {showAsTable ? (\n                <div className=\"animate-in\" style={{ height: '100%', overflow: 'auto' }}>\n                  <DataTable \n                    columns={marketShareColumns} \n                    data={marketShareTableData} \n                  />\n                </div>\n              ) : (\n                <AreaChart \n                  key={chartKey}\n                  data={marketShareChartData}\n                  height={350}\n                  primaryColor={colors.green}\n                  secondaryColor={colors.blue.primary}\n                  areaOpacity={0.2}\n                  title1=\"InsurTech\"\n                  title2=\"Traditional\"\n                />\n              )}\n            </div>\n          </div>\n        </ChartContainer>\n\n        <ChartContainer \n          title=\"Growth Rate by Category\" \n          insight=\"Cyber Insurance and Climate Risk categories show the highest growth rates, presenting significant investment opportunities.\"\n        >\n          <BarChart \n            data={growthRateChartData} \n            maxValue={30} \n          />\n        </ChartContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketDynamicsSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}